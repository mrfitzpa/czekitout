Search.setIndex({"docnames": ["INSTALL", "_autosummary/czekitout", "_autosummary/czekitout.check", "_autosummary/czekitout.check.if_bool", "_autosummary/czekitout.check.if_bool_array_3d", "_autosummary/czekitout.check.if_bool_matrix", "_autosummary/czekitout.check.if_callable", "_autosummary/czekitout.check.if_dict_like", "_autosummary/czekitout.check.if_float", "_autosummary/czekitout.check.if_float_seq", "_autosummary/czekitout.check.if_instance_of_any_accepted_types", "_autosummary/czekitout.check.if_int", "_autosummary/czekitout.check.if_int_seq", "_autosummary/czekitout.check.if_multi_dim_slice_like", "_autosummary/czekitout.check.if_nonnegative_float", "_autosummary/czekitout.check.if_nonnegative_float_seq", "_autosummary/czekitout.check.if_nonnegative_int", "_autosummary/czekitout.check.if_nonnegative_int_seq", "_autosummary/czekitout.check.if_nonnegative_numpy_array", "_autosummary/czekitout.check.if_nonnegative_numpy_matrix", "_autosummary/czekitout.check.if_one_of_any_accepted_strings", "_autosummary/czekitout.check.if_pair_of_floats", "_autosummary/czekitout.check.if_pair_of_ints", "_autosummary/czekitout.check.if_pair_of_nonnegative_floats", "_autosummary/czekitout.check.if_pair_of_nonnegative_ints", "_autosummary/czekitout.check.if_pair_of_positive_floats", "_autosummary/czekitout.check.if_pair_of_positive_ints", "_autosummary/czekitout.check.if_pairs_of_floats", "_autosummary/czekitout.check.if_pairs_of_ints", "_autosummary/czekitout.check.if_pairs_of_nonnegative_ints", "_autosummary/czekitout.check.if_path_like", "_autosummary/czekitout.check.if_path_like_seq", "_autosummary/czekitout.check.if_positive_float", "_autosummary/czekitout.check.if_positive_float_seq", "_autosummary/czekitout.check.if_positive_int", "_autosummary/czekitout.check.if_positive_int_seq", "_autosummary/czekitout.check.if_quadruplet_of_nonnegative_ints", "_autosummary/czekitout.check.if_real_numpy_array", "_autosummary/czekitout.check.if_real_numpy_array_1d", "_autosummary/czekitout.check.if_real_numpy_array_3d", "_autosummary/czekitout.check.if_real_numpy_matrix", "_autosummary/czekitout.check.if_real_two_column_numpy_matrix", "_autosummary/czekitout.check.if_single_dim_slice_like", "_autosummary/czekitout.check.if_str_like", "_autosummary/czekitout.check.if_str_like_seq", "_autosummary/czekitout.convert", "_autosummary/czekitout.convert.to_bool", "_autosummary/czekitout.convert.to_bool_numpy_array_3d", "_autosummary/czekitout.convert.to_bool_numpy_matrix", "_autosummary/czekitout.convert.to_dict", "_autosummary/czekitout.convert.to_float", "_autosummary/czekitout.convert.to_int", "_autosummary/czekitout.convert.to_list_of_floats", "_autosummary/czekitout.convert.to_list_of_ints", "_autosummary/czekitout.convert.to_list_of_nonnegative_floats", "_autosummary/czekitout.convert.to_list_of_nonnegative_ints", "_autosummary/czekitout.convert.to_list_of_path_like_objs", "_autosummary/czekitout.convert.to_list_of_positive_floats", "_autosummary/czekitout.convert.to_list_of_positive_ints", "_autosummary/czekitout.convert.to_list_of_strs", "_autosummary/czekitout.convert.to_multi_dim_slice", "_autosummary/czekitout.convert.to_nonnegative_float", "_autosummary/czekitout.convert.to_nonnegative_int", "_autosummary/czekitout.convert.to_nonnegative_numpy_array", "_autosummary/czekitout.convert.to_nonnegative_numpy_matrix", "_autosummary/czekitout.convert.to_numpy_array", "_autosummary/czekitout.convert.to_pair_of_floats", "_autosummary/czekitout.convert.to_pair_of_ints", "_autosummary/czekitout.convert.to_pair_of_nonnegative_floats", "_autosummary/czekitout.convert.to_pair_of_nonnegative_ints", "_autosummary/czekitout.convert.to_pair_of_positive_floats", "_autosummary/czekitout.convert.to_pair_of_positive_ints", "_autosummary/czekitout.convert.to_pairs_of_floats", "_autosummary/czekitout.convert.to_pairs_of_ints", "_autosummary/czekitout.convert.to_pairs_of_nonnegative_ints", "_autosummary/czekitout.convert.to_positive_float", "_autosummary/czekitout.convert.to_positive_int", "_autosummary/czekitout.convert.to_quadruplet_of_nonnegative_ints", "_autosummary/czekitout.convert.to_real_numpy_array", "_autosummary/czekitout.convert.to_real_numpy_array_1d", "_autosummary/czekitout.convert.to_real_numpy_array_3d", "_autosummary/czekitout.convert.to_real_numpy_matrix", "_autosummary/czekitout.convert.to_real_two_column_numpy_matrix", "_autosummary/czekitout.convert.to_single_dim_slice", "_autosummary/czekitout.convert.to_str_from_path_like", "_autosummary/czekitout.convert.to_str_from_str_like", "_autosummary/czekitout.convert.to_tuple_of_floats", "_autosummary/czekitout.convert.to_tuple_of_ints", "_autosummary/czekitout.convert.to_tuple_of_nonnegative_floats", "_autosummary/czekitout.convert.to_tuple_of_nonnegative_ints", "_autosummary/czekitout.convert.to_tuple_of_path_like_objs", "_autosummary/czekitout.convert.to_tuple_of_positive_floats", "_autosummary/czekitout.convert.to_tuple_of_positive_ints", "_autosummary/czekitout.convert.to_tuple_of_strs", "_autosummary/czekitout.isa", "_autosummary/czekitout.isa.bool_numpy_array", "_autosummary/czekitout.isa.bool_numpy_array_3d", "_autosummary/czekitout.isa.bool_numpy_matrix", "_autosummary/czekitout.isa.complex_numpy_array", "_autosummary/czekitout.isa.complex_numpy_matrix", "_autosummary/czekitout.isa.nonnegative_numpy_array", "_autosummary/czekitout.isa.nonnegative_numpy_matrix", "_autosummary/czekitout.isa.numpy_array", "_autosummary/czekitout.isa.numpy_array_1d", "_autosummary/czekitout.isa.numpy_array_3d", "_autosummary/czekitout.isa.numpy_matrix", "_autosummary/czekitout.isa.real_numpy_array", "_autosummary/czekitout.isa.real_numpy_array_1d", "_autosummary/czekitout.isa.real_numpy_array_3d", "_autosummary/czekitout.isa.real_numpy_matrix", "_autosummary/czekitout.isa.real_two_column_numpy_matrix", "_autosummary/czekitout.isa.scalar_numpy_array", "_autosummary/czekitout.isa.two_column_numpy_matrix", "_autosummary/czekitout.name", "_autosummary/czekitout.name.fully_qualified_class_name", "_autosummary/czekitout.show_config", "_autosummary/czekitout.version", "api", "changelog", "examples", "index", "license", "todo"], "filenames": ["INSTALL.rst", "_autosummary/czekitout.rst", "_autosummary/czekitout.check.rst", "_autosummary/czekitout.check.if_bool.rst", "_autosummary/czekitout.check.if_bool_array_3d.rst", "_autosummary/czekitout.check.if_bool_matrix.rst", "_autosummary/czekitout.check.if_callable.rst", "_autosummary/czekitout.check.if_dict_like.rst", "_autosummary/czekitout.check.if_float.rst", "_autosummary/czekitout.check.if_float_seq.rst", "_autosummary/czekitout.check.if_instance_of_any_accepted_types.rst", "_autosummary/czekitout.check.if_int.rst", "_autosummary/czekitout.check.if_int_seq.rst", "_autosummary/czekitout.check.if_multi_dim_slice_like.rst", "_autosummary/czekitout.check.if_nonnegative_float.rst", "_autosummary/czekitout.check.if_nonnegative_float_seq.rst", "_autosummary/czekitout.check.if_nonnegative_int.rst", "_autosummary/czekitout.check.if_nonnegative_int_seq.rst", "_autosummary/czekitout.check.if_nonnegative_numpy_array.rst", "_autosummary/czekitout.check.if_nonnegative_numpy_matrix.rst", "_autosummary/czekitout.check.if_one_of_any_accepted_strings.rst", "_autosummary/czekitout.check.if_pair_of_floats.rst", "_autosummary/czekitout.check.if_pair_of_ints.rst", "_autosummary/czekitout.check.if_pair_of_nonnegative_floats.rst", "_autosummary/czekitout.check.if_pair_of_nonnegative_ints.rst", "_autosummary/czekitout.check.if_pair_of_positive_floats.rst", "_autosummary/czekitout.check.if_pair_of_positive_ints.rst", "_autosummary/czekitout.check.if_pairs_of_floats.rst", "_autosummary/czekitout.check.if_pairs_of_ints.rst", "_autosummary/czekitout.check.if_pairs_of_nonnegative_ints.rst", "_autosummary/czekitout.check.if_path_like.rst", "_autosummary/czekitout.check.if_path_like_seq.rst", "_autosummary/czekitout.check.if_positive_float.rst", "_autosummary/czekitout.check.if_positive_float_seq.rst", "_autosummary/czekitout.check.if_positive_int.rst", "_autosummary/czekitout.check.if_positive_int_seq.rst", "_autosummary/czekitout.check.if_quadruplet_of_nonnegative_ints.rst", "_autosummary/czekitout.check.if_real_numpy_array.rst", "_autosummary/czekitout.check.if_real_numpy_array_1d.rst", "_autosummary/czekitout.check.if_real_numpy_array_3d.rst", "_autosummary/czekitout.check.if_real_numpy_matrix.rst", "_autosummary/czekitout.check.if_real_two_column_numpy_matrix.rst", "_autosummary/czekitout.check.if_single_dim_slice_like.rst", "_autosummary/czekitout.check.if_str_like.rst", "_autosummary/czekitout.check.if_str_like_seq.rst", "_autosummary/czekitout.convert.rst", "_autosummary/czekitout.convert.to_bool.rst", "_autosummary/czekitout.convert.to_bool_numpy_array_3d.rst", "_autosummary/czekitout.convert.to_bool_numpy_matrix.rst", "_autosummary/czekitout.convert.to_dict.rst", "_autosummary/czekitout.convert.to_float.rst", "_autosummary/czekitout.convert.to_int.rst", "_autosummary/czekitout.convert.to_list_of_floats.rst", "_autosummary/czekitout.convert.to_list_of_ints.rst", "_autosummary/czekitout.convert.to_list_of_nonnegative_floats.rst", "_autosummary/czekitout.convert.to_list_of_nonnegative_ints.rst", "_autosummary/czekitout.convert.to_list_of_path_like_objs.rst", "_autosummary/czekitout.convert.to_list_of_positive_floats.rst", "_autosummary/czekitout.convert.to_list_of_positive_ints.rst", "_autosummary/czekitout.convert.to_list_of_strs.rst", "_autosummary/czekitout.convert.to_multi_dim_slice.rst", "_autosummary/czekitout.convert.to_nonnegative_float.rst", "_autosummary/czekitout.convert.to_nonnegative_int.rst", "_autosummary/czekitout.convert.to_nonnegative_numpy_array.rst", "_autosummary/czekitout.convert.to_nonnegative_numpy_matrix.rst", "_autosummary/czekitout.convert.to_numpy_array.rst", "_autosummary/czekitout.convert.to_pair_of_floats.rst", "_autosummary/czekitout.convert.to_pair_of_ints.rst", "_autosummary/czekitout.convert.to_pair_of_nonnegative_floats.rst", "_autosummary/czekitout.convert.to_pair_of_nonnegative_ints.rst", "_autosummary/czekitout.convert.to_pair_of_positive_floats.rst", "_autosummary/czekitout.convert.to_pair_of_positive_ints.rst", "_autosummary/czekitout.convert.to_pairs_of_floats.rst", "_autosummary/czekitout.convert.to_pairs_of_ints.rst", "_autosummary/czekitout.convert.to_pairs_of_nonnegative_ints.rst", "_autosummary/czekitout.convert.to_positive_float.rst", "_autosummary/czekitout.convert.to_positive_int.rst", "_autosummary/czekitout.convert.to_quadruplet_of_nonnegative_ints.rst", "_autosummary/czekitout.convert.to_real_numpy_array.rst", "_autosummary/czekitout.convert.to_real_numpy_array_1d.rst", "_autosummary/czekitout.convert.to_real_numpy_array_3d.rst", "_autosummary/czekitout.convert.to_real_numpy_matrix.rst", "_autosummary/czekitout.convert.to_real_two_column_numpy_matrix.rst", "_autosummary/czekitout.convert.to_single_dim_slice.rst", "_autosummary/czekitout.convert.to_str_from_path_like.rst", "_autosummary/czekitout.convert.to_str_from_str_like.rst", "_autosummary/czekitout.convert.to_tuple_of_floats.rst", "_autosummary/czekitout.convert.to_tuple_of_ints.rst", "_autosummary/czekitout.convert.to_tuple_of_nonnegative_floats.rst", "_autosummary/czekitout.convert.to_tuple_of_nonnegative_ints.rst", "_autosummary/czekitout.convert.to_tuple_of_path_like_objs.rst", "_autosummary/czekitout.convert.to_tuple_of_positive_floats.rst", "_autosummary/czekitout.convert.to_tuple_of_positive_ints.rst", "_autosummary/czekitout.convert.to_tuple_of_strs.rst", "_autosummary/czekitout.isa.rst", "_autosummary/czekitout.isa.bool_numpy_array.rst", "_autosummary/czekitout.isa.bool_numpy_array_3d.rst", "_autosummary/czekitout.isa.bool_numpy_matrix.rst", "_autosummary/czekitout.isa.complex_numpy_array.rst", "_autosummary/czekitout.isa.complex_numpy_matrix.rst", "_autosummary/czekitout.isa.nonnegative_numpy_array.rst", "_autosummary/czekitout.isa.nonnegative_numpy_matrix.rst", "_autosummary/czekitout.isa.numpy_array.rst", "_autosummary/czekitout.isa.numpy_array_1d.rst", "_autosummary/czekitout.isa.numpy_array_3d.rst", "_autosummary/czekitout.isa.numpy_matrix.rst", "_autosummary/czekitout.isa.real_numpy_array.rst", "_autosummary/czekitout.isa.real_numpy_array_1d.rst", "_autosummary/czekitout.isa.real_numpy_array_3d.rst", "_autosummary/czekitout.isa.real_numpy_matrix.rst", "_autosummary/czekitout.isa.real_two_column_numpy_matrix.rst", "_autosummary/czekitout.isa.scalar_numpy_array.rst", "_autosummary/czekitout.isa.two_column_numpy_matrix.rst", "_autosummary/czekitout.name.rst", "_autosummary/czekitout.name.fully_qualified_class_name.rst", "_autosummary/czekitout.show_config.rst", "_autosummary/czekitout.version.rst", "api.rst", "changelog.rst", "examples.rst", "index.rst", "license.rst", "todo.rst"], "titles": ["<span class=\"section-number\">1. </span>Installation instructions", "<span class=\"section-number\">2. </span>czekitout", "<span class=\"section-number\">2.2. </span>czekitout.check", "<span class=\"section-number\">2.2.1. </span>czekitout.check.if_bool", "<span class=\"section-number\">2.2.2. </span>czekitout.check.if_bool_array_3d", "<span class=\"section-number\">2.2.3. </span>czekitout.check.if_bool_matrix", "<span class=\"section-number\">2.2.4. </span>czekitout.check.if_callable", "<span class=\"section-number\">2.2.5. </span>czekitout.check.if_dict_like", "<span class=\"section-number\">2.2.6. </span>czekitout.check.if_float", "<span class=\"section-number\">2.2.7. </span>czekitout.check.if_float_seq", "<span class=\"section-number\">2.2.8. </span>czekitout.check.if_instance_of_any_accepted_types", "<span class=\"section-number\">2.2.9. </span>czekitout.check.if_int", "<span class=\"section-number\">2.2.10. </span>czekitout.check.if_int_seq", "<span class=\"section-number\">2.2.11. </span>czekitout.check.if_multi_dim_slice_like", "<span class=\"section-number\">2.2.12. </span>czekitout.check.if_nonnegative_float", "<span class=\"section-number\">2.2.13. </span>czekitout.check.if_nonnegative_float_seq", "<span class=\"section-number\">2.2.14. </span>czekitout.check.if_nonnegative_int", "<span class=\"section-number\">2.2.15. </span>czekitout.check.if_nonnegative_int_seq", "<span class=\"section-number\">2.2.16. </span>czekitout.check.if_nonnegative_numpy_array", "<span class=\"section-number\">2.2.17. </span>czekitout.check.if_nonnegative_numpy_matrix", "<span class=\"section-number\">2.2.18. </span>czekitout.check.if_one_of_any_accepted_strings", "<span class=\"section-number\">2.2.19. </span>czekitout.check.if_pair_of_floats", "<span class=\"section-number\">2.2.20. </span>czekitout.check.if_pair_of_ints", "<span class=\"section-number\">2.2.21. </span>czekitout.check.if_pair_of_nonnegative_floats", "<span class=\"section-number\">2.2.22. </span>czekitout.check.if_pair_of_nonnegative_ints", "<span class=\"section-number\">2.2.23. </span>czekitout.check.if_pair_of_positive_floats", "<span class=\"section-number\">2.2.24. </span>czekitout.check.if_pair_of_positive_ints", "<span class=\"section-number\">2.2.25. </span>czekitout.check.if_pairs_of_floats", "<span class=\"section-number\">2.2.26. </span>czekitout.check.if_pairs_of_ints", "<span class=\"section-number\">2.2.27. </span>czekitout.check.if_pairs_of_nonnegative_ints", "<span class=\"section-number\">2.2.28. </span>czekitout.check.if_path_like", "<span class=\"section-number\">2.2.29. </span>czekitout.check.if_path_like_seq", "<span class=\"section-number\">2.2.30. </span>czekitout.check.if_positive_float", "<span class=\"section-number\">2.2.31. </span>czekitout.check.if_positive_float_seq", "<span class=\"section-number\">2.2.32. </span>czekitout.check.if_positive_int", "<span class=\"section-number\">2.2.33. </span>czekitout.check.if_positive_int_seq", "<span class=\"section-number\">2.2.34. </span>czekitout.check.if_quadruplet_of_nonnegative_ints", "<span class=\"section-number\">2.2.35. </span>czekitout.check.if_real_numpy_array", "<span class=\"section-number\">2.2.36. </span>czekitout.check.if_real_numpy_array_1d", "<span class=\"section-number\">2.2.37. </span>czekitout.check.if_real_numpy_array_3d", "<span class=\"section-number\">2.2.38. </span>czekitout.check.if_real_numpy_matrix", "<span class=\"section-number\">2.2.39. </span>czekitout.check.if_real_two_column_numpy_matrix", "<span class=\"section-number\">2.2.40. </span>czekitout.check.if_single_dim_slice_like", "<span class=\"section-number\">2.2.41. </span>czekitout.check.if_str_like", "<span class=\"section-number\">2.2.42. </span>czekitout.check.if_str_like_seq", "<span class=\"section-number\">2.3. </span>czekitout.convert", "<span class=\"section-number\">2.3.1. </span>czekitout.convert.to_bool", "<span class=\"section-number\">2.3.2. </span>czekitout.convert.to_bool_numpy_array_3d", "<span class=\"section-number\">2.3.3. </span>czekitout.convert.to_bool_numpy_matrix", "<span class=\"section-number\">2.3.4. </span>czekitout.convert.to_dict", "<span class=\"section-number\">2.3.5. </span>czekitout.convert.to_float", "<span class=\"section-number\">2.3.6. </span>czekitout.convert.to_int", "<span class=\"section-number\">2.3.7. </span>czekitout.convert.to_list_of_floats", "<span class=\"section-number\">2.3.8. </span>czekitout.convert.to_list_of_ints", "<span class=\"section-number\">2.3.9. </span>czekitout.convert.to_list_of_nonnegative_floats", "<span class=\"section-number\">2.3.10. </span>czekitout.convert.to_list_of_nonnegative_ints", "<span class=\"section-number\">2.3.11. </span>czekitout.convert.to_list_of_path_like_objs", "<span class=\"section-number\">2.3.12. </span>czekitout.convert.to_list_of_positive_floats", "<span class=\"section-number\">2.3.13. </span>czekitout.convert.to_list_of_positive_ints", "<span class=\"section-number\">2.3.14. </span>czekitout.convert.to_list_of_strs", "<span class=\"section-number\">2.3.15. </span>czekitout.convert.to_multi_dim_slice", "<span class=\"section-number\">2.3.16. </span>czekitout.convert.to_nonnegative_float", "<span class=\"section-number\">2.3.17. </span>czekitout.convert.to_nonnegative_int", "<span class=\"section-number\">2.3.18. </span>czekitout.convert.to_nonnegative_numpy_array", "<span class=\"section-number\">2.3.19. </span>czekitout.convert.to_nonnegative_numpy_matrix", "<span class=\"section-number\">2.3.20. </span>czekitout.convert.to_numpy_array", "<span class=\"section-number\">2.3.21. </span>czekitout.convert.to_pair_of_floats", "<span class=\"section-number\">2.3.22. </span>czekitout.convert.to_pair_of_ints", "<span class=\"section-number\">2.3.23. </span>czekitout.convert.to_pair_of_nonnegative_floats", "<span class=\"section-number\">2.3.24. </span>czekitout.convert.to_pair_of_nonnegative_ints", "<span class=\"section-number\">2.3.25. </span>czekitout.convert.to_pair_of_positive_floats", "<span class=\"section-number\">2.3.26. </span>czekitout.convert.to_pair_of_positive_ints", "<span class=\"section-number\">2.3.27. </span>czekitout.convert.to_pairs_of_floats", "<span class=\"section-number\">2.3.28. </span>czekitout.convert.to_pairs_of_ints", "<span class=\"section-number\">2.3.29. </span>czekitout.convert.to_pairs_of_nonnegative_ints", "<span class=\"section-number\">2.3.30. </span>czekitout.convert.to_positive_float", "<span class=\"section-number\">2.3.31. </span>czekitout.convert.to_positive_int", "<span class=\"section-number\">2.3.32. </span>czekitout.convert.to_quadruplet_of_nonnegative_ints", "<span class=\"section-number\">2.3.33. </span>czekitout.convert.to_real_numpy_array", "<span class=\"section-number\">2.3.34. </span>czekitout.convert.to_real_numpy_array_1d", "<span class=\"section-number\">2.3.35. </span>czekitout.convert.to_real_numpy_array_3d", "<span class=\"section-number\">2.3.36. </span>czekitout.convert.to_real_numpy_matrix", "<span class=\"section-number\">2.3.37. </span>czekitout.convert.to_real_two_column_numpy_matrix", "<span class=\"section-number\">2.3.38. </span>czekitout.convert.to_single_dim_slice", "<span class=\"section-number\">2.3.39. </span>czekitout.convert.to_str_from_path_like", "<span class=\"section-number\">2.3.40. </span>czekitout.convert.to_str_from_str_like", "<span class=\"section-number\">2.3.41. </span>czekitout.convert.to_tuple_of_floats", "<span class=\"section-number\">2.3.42. </span>czekitout.convert.to_tuple_of_ints", "<span class=\"section-number\">2.3.43. </span>czekitout.convert.to_tuple_of_nonnegative_floats", "<span class=\"section-number\">2.3.44. </span>czekitout.convert.to_tuple_of_nonnegative_ints", "<span class=\"section-number\">2.3.45. </span>czekitout.convert.to_tuple_of_path_like_objs", "<span class=\"section-number\">2.3.46. </span>czekitout.convert.to_tuple_of_positive_floats", "<span class=\"section-number\">2.3.47. </span>czekitout.convert.to_tuple_of_positive_ints", "<span class=\"section-number\">2.3.48. </span>czekitout.convert.to_tuple_of_strs", "<span class=\"section-number\">2.4. </span>czekitout.isa", "<span class=\"section-number\">2.4.1. </span>czekitout.isa.bool_numpy_array", "<span class=\"section-number\">2.4.2. </span>czekitout.isa.bool_numpy_array_3d", "<span class=\"section-number\">2.4.3. </span>czekitout.isa.bool_numpy_matrix", "<span class=\"section-number\">2.4.4. </span>czekitout.isa.complex_numpy_array", "<span class=\"section-number\">2.4.5. </span>czekitout.isa.complex_numpy_matrix", "<span class=\"section-number\">2.4.6. </span>czekitout.isa.nonnegative_numpy_array", "<span class=\"section-number\">2.4.7. </span>czekitout.isa.nonnegative_numpy_matrix", "<span class=\"section-number\">2.4.8. </span>czekitout.isa.numpy_array", "<span class=\"section-number\">2.4.9. </span>czekitout.isa.numpy_array_1d", "<span class=\"section-number\">2.4.10. </span>czekitout.isa.numpy_array_3d", "<span class=\"section-number\">2.4.11. </span>czekitout.isa.numpy_matrix", "<span class=\"section-number\">2.4.12. </span>czekitout.isa.real_numpy_array", "<span class=\"section-number\">2.4.13. </span>czekitout.isa.real_numpy_array_1d", "<span class=\"section-number\">2.4.14. </span>czekitout.isa.real_numpy_array_3d", "<span class=\"section-number\">2.4.15. </span>czekitout.isa.real_numpy_matrix", "<span class=\"section-number\">2.4.16. </span>czekitout.isa.real_two_column_numpy_matrix", "<span class=\"section-number\">2.4.17. </span>czekitout.isa.scalar_numpy_array", "<span class=\"section-number\">2.4.18. </span>czekitout.isa.two_column_numpy_matrix", "<span class=\"section-number\">2.5. </span>czekitout.name", "<span class=\"section-number\">2.5.1. </span>czekitout.name.fully_qualified_class_name", "<span class=\"section-number\">2.1. </span>czekitout.show_config", "<span class=\"section-number\">2.6. </span>czekitout.version", "czekitout reference guide", "<span class=\"section-number\">5. </span>CHANGELOG", "<span class=\"section-number\">3. </span>Examples", "czekitout", "<span class=\"section-number\">6. </span>License", "<span class=\"section-number\">4. </span>To-Do list"], "terms": {"first": [0, 121], "open": 0, "up": 0, "appropri": [0, 121], "command": [0, 121], "line": [0, 120, 121], "interfac": [0, 121], "On": 0, "unix": 0, "base": [0, 121], "system": [0, 121], "you": [0, 119, 121], "would": [0, 121], "termin": [0, 121], "window": [0, 121], "an": [0, 3, 8, 11, 30, 42, 43, 46, 49, 50, 51, 65, 83, 84, 85, 121], "anaconda": 0, "prompt": 0, "administr": 0, "next": [0, 121], "assum": [0, 121], "have": [0, 121], "download": 0, "clone": 0, "git": 0, "repositori": [0, 119], "chang": [0, 118, 121], "root": [0, 119], "said": 0, "run": [0, 121], "follow": [0, 10, 20, 121], "pip": 0, "note": 0, "must": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 121], "includ": [0, 121], "period": 0, "well": [0, 121], "The": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 114, 116, 121], "abov": [0, 121], "execut": [0, 121], "standard": [0, 116, 121], "upon": 0, "complet": 0, "set": [0, 20, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "librari": [0, 1, 115, 116, 119, 120, 121], "should": [0, 121], "numpi": [0, 18, 19, 37, 38, 39, 40, 41, 47, 48, 63, 64, 65, 78, 79, 80, 81, 82, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "pytest": 0, "option": [0, 121], "addit": [0, 121], "featur": [0, 121], "one": [0, 10, 13, 20, 42, 60, 83, 118, 120, 121], "can": [0, 119, 120, 121], "depend": 0, "To": [0, 120, 121], "subset": 0, "from": [0, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 121], "selector": 0, "where": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 119, 121], "doc": 0, "necessari": [0, 121], "all": [0, 121], "which": [0, 13, 60, 120, 121], "i": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 119, 120, 121], "simpli": 0, "If": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 121], "someon": 0, "els": 0, "ha": [0, 118, 121], "made": [0, 121], "thi": [0, 116, 121], "reinstal": 0, "issu": 0, "wa": [0, 121], "describ": 0, "previou": [0, 121], "section": [0, 121], "html": [0, 121], "format": [0, 116, 121], "sourc": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 121], "also": [0, 121], "need": [0, 121], "sever": 0, "other": [0, 121], "packag": [0, 121], "done": 0, "latter": 0, "extra": 0, "ar": [0, 1, 2, 45, 120, 121], "prerequisit": 0, "been": [0, 118, 121], "within": [0, 121], "your": [0, 121], "virtual": 0, "environ": 0, "cd": 0, "make": [0, 121], "_build": 0, "contain": [0, 1, 2, 13, 45, 60, 94, 113, 120, 121], "ani": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 121], "us": [0, 1, 2, 45, 115, 116, 119, 121], "favorit": 0, "web": 0, "browser": 0, "most": [0, 13, 60, 121], "like": [0, 7, 13, 30, 31, 42, 43, 44, 49, 56, 59, 60, 83, 84, 85, 90, 93, 121], "again": 0, "new": [0, 120, 121], "python": [1, 116, 120], "collect": [1, 120, 121], "function": [1, 2, 45, 94, 113, 120, 121], "facilit": [1, 2, 45, 94, 120], "type": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 120, 121], "check": [1, 94, 120], "valid": [1, 2, 120, 121], "convers": [1, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 120], "error": [1, 2, 45, 120], "messag": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 120], "when": [1, 2, 45, 120, 121], "except": [1, 2, 45, 120, 121], "thrown": [1, 2, 45, 120], "obj": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "obj_nam": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "whether": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 121], "input": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 121], "boolean": [3, 4, 5, 46, 47, 48, 95, 96, 97], "typeerror": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "rais": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "instanc": [3, 8, 10, 11, 30, 43, 46, 49, 50, 51, 84, 85], "class": [3, 8, 10, 11, 30, 43, 46, 49, 50, 51, 84, 85, 113, 114, 121], "bool": [3, 46, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "replac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "content": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 121], "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 116], "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 114], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 120, 121], "3d": [4, 39, 47, 80, 96, 104, 108], "arrai": [4, 5, 18, 37, 38, 39, 40, 41, 47, 48, 63, 65, 78, 79, 80, 81, 82, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "2d": [5, 40, 41, 48, 82, 97, 99, 101, 105, 109, 110, 112], "matrix": [5, 19, 41, 47, 48, 64, 80, 81, 82], "callabl": 6, "dictionari": [7, 49], "float": [8, 9, 14, 15, 21, 23, 25, 27, 32, 33, 50, 52, 54, 57, 61, 66, 68, 70, 72, 75, 86, 88, 91], "point": [8, 9, 14, 15, 21, 23, 25, 27, 32, 33, 50, 52, 54, 57, 61, 75, 86, 88, 91], "number": [8, 9, 14, 15, 18, 19, 21, 23, 25, 27, 32, 33, 37, 38, 39, 40, 41, 50, 52, 54, 57, 61, 66, 68, 70, 72, 75, 82, 86, 88, 91, 121], "sequenc": [9, 10, 12, 13, 15, 17, 20, 27, 28, 29, 31, 33, 35, 42, 44, 52, 53, 54, 55, 56, 57, 58, 59, 60, 72, 73, 74, 83, 86, 87, 88, 89, 90, 91, 92, 93], "accepted_typ": 10, "given": [10, 20, 113, 114, 121], "accept": [10, 20, 121], "len": [10, 20], "1": [10, 20, 121], "fulli": [10, 113, 114], "qualifi": [10, 113, 114, 121], "0": [10, 121], "store": [10, 20], "array_lik": [10, 20], "ndim": [10, 20], "integ": [11, 12, 13, 16, 17, 22, 24, 26, 28, 29, 34, 35, 36, 42, 51, 53, 55, 58, 60, 62, 67, 69, 71, 73, 74, 76, 77, 83, 87, 89, 92], "int": [11, 16, 34, 51, 53, 60, 62, 67, 69, 71, 73, 76, 77, 87], "multi": [13, 60], "dimension": [13, 42, 60, 83], "slice": [13, 42, 60, 83], "we": [13, 42, 60, 83, 121], "defin": [13, 42, 60, 83, 121], "item": [13, 60, 121], "being": [13, 60, 121], "remain": [13, 60, 121], "nonneg": [14, 15, 16, 17, 18, 19, 23, 24, 29, 36, 54, 55, 61, 62, 63, 64, 68, 74, 88, 89, 100, 101], "accepted_str": 20, "pair": [21, 22, 23, 24, 25, 26, 27, 28, 29, 66, 67, 68, 69, 70, 71, 72, 73, 74], "real": [21, 23, 25, 27, 37, 38, 39, 40, 41, 66, 68, 70, 72, 78, 79, 80, 81, 82, 106, 107, 108, 109, 110], "posit": [25, 26, 32, 33, 34, 35, 57, 58, 70, 71, 75, 76, 91, 92], "path": [30, 31, 56, 84, 90], "quadruplet": [36, 77], "valu": [37, 38, 39, 40, 41, 78, 79, 80, 81, 82, 98, 99, 106, 107, 108, 109, 110], "1d": [38, 79, 103, 107], "two": [41, 66, 67, 68, 69, 70, 71, 72, 73, 74, 82, 110, 112, 121], "column": [41, 82, 110, 112], "return": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 121], "result": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 121], "dict": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93], "list": [52, 53, 54, 55, 56, 57, 58, 59, 60, 83, 120, 121], "tupl": [60, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 86, 87, 88, 89, 90, 91, 92, 93], "element": [66, 67, 68, 69, 70, 71, 72, 73, 74, 77], "non": [69, 77, 121], "neg": [69, 77], "four": 77, "true": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "otherwis": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121], "fals": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "bolean": 97, "complex": [98, 99], "scalar": 111, "determin": [113, 121], "obj_or_cl": 114, "get": [114, 121], "print": 115, "inform": [115, 121], "about": [115, 121], "version": [115, 118, 120, 121], "A": [116, 121], "modul": [116, 120], "retriev": 116, "provid": [116, 121], "major": [116, 121], "minor": 116, "revis": [116, 121], "pkg_resourc": 116, "parse_vers": 116, "compar": 116, "differ": [116, 121], "No": [118, 121], "log": 118, "yet": 118, "onli": [118, 121], "releas": [118, 121], "czekitout": [118, 119], "date": [118, 121], "find": [119, 121], "seri": 119, "notebook": 119, "found": [119, 121], "directori": 119, "For": [120, 121], "instruct": 120, "instal": [120, 121], "see": [120, 121], "page": 120, "those": [120, 121], "recommend": 120, "thei": [120, 121], "take": [120, 121], "look": 120, "exampl": [120, 121, 122], "some": [120, 121], "code": [120, 121], "show": [120, 121], "while": 120, "go": 120, "through": [120, 121], "reader": 120, "consult": 120, "refer": [120, 121], "guid": 120, "understand": 120, "what": [120, 121], "each": [120, 121], "do": [120, 121], "home": 120, "updat": [120, 121], "uninstal": 120, "gener": [120, 121], "document": [120, 121], "file": [120, 121], "show_config": 120, "if_bool": 120, "if_bool_array_3d": 120, "if_bool_matrix": 120, "if_cal": 120, "if_dict_lik": 120, "if_float": 120, "if_float_seq": 120, "if_instance_of_any_accepted_typ": 120, "if_int": 120, "if_int_seq": 120, "if_multi_dim_slice_lik": 120, "if_nonnegative_float": 120, "if_nonnegative_float_seq": 120, "if_nonnegative_int": 120, "if_nonnegative_int_seq": 120, "if_nonnegative_numpy_arrai": 120, "if_nonnegative_numpy_matrix": 120, "if_one_of_any_accepted_str": 120, "if_pair_of_float": 120, "if_pair_of_int": 120, "if_pair_of_nonnegative_float": 120, "if_pair_of_nonnegative_int": 120, "if_pair_of_positive_float": 120, "if_pair_of_positive_int": 120, "if_pairs_of_float": 120, "if_pairs_of_int": 120, "if_pairs_of_nonnegative_int": 120, "if_path_lik": 120, "if_path_like_seq": 120, "if_positive_float": 120, "if_positive_float_seq": 120, "if_positive_int": 120, "if_positive_int_seq": 120, "if_quadruplet_of_nonnegative_int": 120, "if_real_numpy_arrai": 120, "if_real_numpy_array_1d": 120, "if_real_numpy_array_3d": 120, "if_real_numpy_matrix": 120, "if_real_two_column_numpy_matrix": 120, "if_single_dim_slice_lik": 120, "if_str_lik": 120, "if_str_like_seq": 120, "convert": 120, "to_bool": 120, "to_bool_numpy_array_3d": 120, "to_bool_numpy_matrix": 120, "to_dict": 120, "to_float": 120, "to_int": 120, "to_list_of_float": 120, "to_list_of_int": 120, "to_list_of_nonnegative_float": 120, "to_list_of_nonnegative_int": 120, "to_list_of_path_like_obj": 120, "to_list_of_positive_float": 120, "to_list_of_positive_int": 120, "to_list_of_str": 120, "to_multi_dim_slic": 120, "to_nonnegative_float": 120, "to_nonnegative_int": 120, "to_nonnegative_numpy_arrai": 120, "to_nonnegative_numpy_matrix": 120, "to_numpy_arrai": 120, "to_pair_of_float": 120, "to_pair_of_int": 120, "to_pair_of_nonnegative_float": 120, "to_pair_of_nonnegative_int": 120, "to_pair_of_positive_float": 120, "to_pair_of_positive_int": 120, "to_pairs_of_float": 120, "to_pairs_of_int": 120, "to_pairs_of_nonnegative_int": 120, "to_positive_float": 120, "to_positive_int": 120, "to_quadruplet_of_nonnegative_int": 120, "to_real_numpy_arrai": 120, "to_real_numpy_array_1d": 120, "to_real_numpy_array_3d": 120, "to_real_numpy_matrix": 120, "to_real_two_column_numpy_matrix": 120, "to_single_dim_slic": 120, "to_str_from_path_lik": 120, "to_str_from_str_lik": 120, "to_tuple_of_float": 120, "to_tuple_of_int": 120, "to_tuple_of_nonnegative_float": 120, "to_tuple_of_nonnegative_int": 120, "to_tuple_of_path_like_obj": 120, "to_tuple_of_positive_float": 120, "to_tuple_of_positive_int": 120, "to_tuple_of_str": 120, "isa": 120, "bool_numpy_arrai": 120, "bool_numpy_array_3d": 120, "bool_numpy_matrix": 120, "complex_numpy_arrai": 120, "complex_numpy_matrix": 120, "nonnegative_numpy_arrai": 120, "nonnegative_numpy_matrix": 120, "numpy_arrai": 120, "numpy_array_1d": 120, "numpy_array_3d": 120, "numpy_matrix": 120, "real_numpy_arrai": 120, "real_numpy_array_1d": 120, "real_numpy_array_3d": 120, "real_numpy_matrix": 120, "real_two_column_numpy_matrix": 120, "scalar_numpy_arrai": 120, "two_column_numpy_matrix": 120, "fully_qualified_class_nam": 120, "changelog": 120, "licens": 120, "index": 120, "search": 120, "here": 121, "publish": 121, "under": 121, "gnu": 121, "3": 121, "below": 121, "public": 121, "29": 121, "june": 121, "2007": 121, "copyright": 121, "c": 121, "free": 121, "softwar": 121, "foundat": 121, "inc": 121, "http": 121, "fsf": 121, "org": 121, "everyon": 121, "permit": 121, "copi": 121, "distribut": 121, "verbatim": 121, "allow": 121, "preambl": 121, "copyleft": 121, "kind": 121, "work": 121, "practic": 121, "design": 121, "awai": 121, "freedom": 121, "share": 121, "By": 121, "contrast": 121, "intend": 121, "guarante": 121, "program": 121, "sure": 121, "its": 121, "user": 121, "our": 121, "appli": 121, "wai": 121, "author": 121, "too": 121, "speak": 121, "price": 121, "charg": 121, "them": 121, "wish": 121, "receiv": 121, "want": 121, "piec": 121, "know": 121, "thing": 121, "protect": 121, "right": 121, "prevent": 121, "deni": 121, "ask": 121, "surrend": 121, "therefor": 121, "certain": 121, "respons": 121, "modifi": 121, "respect": 121, "grati": 121, "fee": 121, "pass": 121, "recipi": 121, "same": 121, "And": 121, "term": 121, "so": 121, "develop": 121, "gpl": 121, "step": 121, "assert": 121, "2": 121, "offer": 121, "give": 121, "legal": 121, "permiss": 121, "clearli": 121, "explain": 121, "warranti": 121, "both": 121, "sake": 121, "requir": 121, "mark": 121, "problem": 121, "attribut": 121, "erron": 121, "devic": 121, "access": 121, "insid": 121, "although": 121, "manufactur": 121, "fundament": 121, "incompat": 121, "aim": 121, "systemat": 121, "pattern": 121, "abus": 121, "occur": 121, "area": 121, "product": 121, "individu": 121, "precis": 121, "unaccept": 121, "prohibit": 121, "aris": 121, "substanti": 121, "domain": 121, "stand": 121, "readi": 121, "extend": 121, "provis": 121, "futur": 121, "final": 121, "everi": 121, "threaten": 121, "constantli": 121, "patent": 121, "state": 121, "restrict": 121, "purpos": 121, "comput": 121, "avoid": 121, "special": 121, "danger": 121, "could": 121, "effect": 121, "proprietari": 121, "assur": 121, "cannot": 121, "render": 121, "condit": 121, "modif": 121, "AND": 121, "definit": 121, "mean": 121, "law": 121, "semiconductor": 121, "mask": 121, "license": 121, "address": 121, "mai": 121, "organ": 121, "adapt": 121, "part": 121, "fashion": 121, "than": 121, "exact": 121, "call": 121, "earlier": 121, "cover": 121, "either": 121, "unmodifi": 121, "propag": 121, "anyth": 121, "without": 121, "directli": 121, "secondarili": 121, "liabl": 121, "infring": 121, "applic": 121, "privat": 121, "avail": 121, "countri": 121, "activ": 121, "convei": 121, "enabl": 121, "parti": 121, "mere": 121, "interact": 121, "network": 121, "transfer": 121, "displai": 121, "notic": 121, "extent": 121, "conveni": 121, "promin": 121, "visibl": 121, "tell": 121, "how": 121, "view": 121, "present": 121, "menu": 121, "meet": 121, "criterion": 121, "prefer": 121, "form": 121, "offici": 121, "recogn": 121, "bodi": 121, "case": 121, "specifi": 121, "particular": 121, "languag": 121, "wide": 121, "among": 121, "whole": 121, "normal": 121, "compon": 121, "b": 121, "serv": 121, "implement": 121, "context": 121, "essenti": 121, "kernel": 121, "specif": 121, "oper": 121, "compil": 121, "produc": 121, "interpret": 121, "correspond": 121, "script": 121, "control": 121, "howev": 121, "doe": 121, "": 121, "tool": 121, "perform": 121, "associ": 121, "dynam": 121, "link": 121, "subprogram": 121, "intim": 121, "data": 121, "commun": 121, "flow": 121, "between": 121, "regener": 121, "automat": 121, "basic": 121, "grant": 121, "irrevoc": 121, "met": 121, "explicitli": 121, "affirm": 121, "unlimit": 121, "output": 121, "constitut": 121, "acknowledg": 121, "fair": 121, "equival": 121, "long": 121, "forc": 121, "sole": 121, "exclus": 121, "facil": 121, "compli": 121, "materi": 121, "thu": 121, "behalf": 121, "direct": 121, "outsid": 121, "relationship": 121, "circumst": 121, "sublicens": 121, "10": 121, "unnecessari": 121, "anti": 121, "circumvent": 121, "shall": 121, "deem": 121, "technolog": 121, "measur": 121, "fulfil": 121, "oblig": 121, "articl": 121, "11": 121, "wipo": 121, "treati": 121, "adopt": 121, "20": 121, "decemb": 121, "1996": 121, "similar": 121, "waiv": 121, "power": 121, "forbid": 121, "exercis": 121, "disclaim": 121, "intent": 121, "limit": 121, "enforc": 121, "against": 121, "third": 121, "4": 121, "medium": 121, "conspicu": 121, "keep": 121, "intact": 121, "ad": 121, "accord": 121, "7": 121, "absenc": 121, "along": 121, "support": 121, "5": 121, "carri": 121, "relev": 121, "entir": 121, "anyon": 121, "who": 121, "come": 121, "possess": 121, "regardless": 121, "invalid": 121, "separ": 121, "d": 121, "independ": 121, "natur": 121, "extens": 121, "combin": 121, "larger": 121, "volum": 121, "storag": 121, "aggreg": 121, "beyond": 121, "inclus": 121, "caus": 121, "6": 121, "machin": 121, "readabl": 121, "embodi": 121, "physic": 121, "accompani": 121, "fix": 121, "durabl": 121, "customarili": 121, "interchang": 121, "written": 121, "least": 121, "three": 121, "year": 121, "spare": 121, "custom": 121, "model": 121, "more": 121, "reason": 121, "cost": 121, "server": 121, "altern": 121, "occasion": 121, "noncommerci": 121, "subsect": 121, "6b": 121, "place": 121, "further": 121, "maintain": 121, "clear": 121, "sai": 121, "host": 121, "ensur": 121, "satisfi": 121, "e": 121, "peer": 121, "transmiss": 121, "6d": 121, "portion": 121, "whose": 121, "exclud": 121, "consum": 121, "tangibl": 121, "person": 121, "properti": 121, "famili": 121, "household": 121, "sold": 121, "incorpor": 121, "dwell": 121, "In": 121, "doubt": 121, "resolv": 121, "favor": 121, "coverag": 121, "typic": 121, "common": 121, "statu": 121, "actual": 121, "expect": 121, "commerci": 121, "industri": 121, "unless": 121, "repres": 121, "signific": 121, "mode": 121, "method": 121, "procedur": 121, "kei": 121, "suffic": 121, "continu": 121, "interf": 121, "becaus": 121, "transact": 121, "perpetu": 121, "character": 121, "But": 121, "neither": 121, "nor": 121, "retain": 121, "abil": 121, "rom": 121, "servic": 121, "itself": 121, "advers": 121, "affect": 121, "violat": 121, "rule": 121, "protocol": 121, "across": 121, "publicli": 121, "password": 121, "unpack": 121, "read": 121, "supplement": 121, "treat": 121, "though": 121, "were": 121, "govern": 121, "regard": 121, "remov": 121, "own": 121, "notwithstand": 121, "add": 121, "holder": 121, "liabil": 121, "15": 121, "16": 121, "preserv": 121, "misrepresent": 121, "origin": 121, "licensor": 121, "declin": 121, "trademark": 121, "trade": 121, "f": 121, "indemnif": 121, "contractu": 121, "assumpt": 121, "impos": 121, "consid": 121, "relicens": 121, "surviv": 121, "statement": 121, "indic": 121, "8": 121, "expressli": 121, "attempt": 121, "void": 121, "paragraph": 121, "ceas": 121, "reinstat": 121, "provision": 121, "until": 121, "perman": 121, "fail": 121, "notifi": 121, "prior": 121, "60": 121, "dai": 121, "after": 121, "cessat": 121, "moreov": 121, "time": 121, "cure": 121, "30": 121, "receipt": 121, "9": 121, "Not": 121, "order": 121, "ancillari": 121, "consequ": 121, "likewis": 121, "noth": 121, "These": 121, "action": 121, "downstream": 121, "subject": 121, "complianc": 121, "entiti": 121, "asset": 121, "subdivid": 121, "merg": 121, "whatev": 121, "predecessor": 121, "interest": 121, "had": 121, "plu": 121, "effort": 121, "royalti": 121, "initi": 121, "litig": 121, "cross": 121, "claim": 121, "counterclaim": 121, "lawsuit": 121, "alleg": 121, "sell": 121, "sale": 121, "import": 121, "contributor": 121, "alreadi": 121, "acquir": 121, "hereaft": 121, "manner": 121, "consist": 121, "worldwid": 121, "express": 121, "agreement": 121, "commit": 121, "denomin": 121, "coven": 121, "sue": 121, "knowingli": 121, "reli": 121, "readili": 121, "arrang": 121, "depriv": 121, "yourself": 121, "benefit": 121, "knowledg": 121, "identifi": 121, "believ": 121, "pursuant": 121, "connect": 121, "singl": 121, "procur": 121, "convey": 121, "discriminatori": 121, "scope": 121, "busi": 121, "payment": 121, "primarili": 121, "enter": 121, "28": 121, "march": 121, "constru": 121, "impli": 121, "defens": 121, "12": 121, "court": 121, "contradict": 121, "excus": 121, "simultan": 121, "pertin": 121, "agre": 121, "whom": 121, "refrain": 121, "13": 121, "affero": 121, "concern": 121, "14": 121, "Such": 121, "spirit": 121, "detail": 121, "distinguish": 121, "later": 121, "choos": 121, "ever": 121, "proxi": 121, "decid": 121, "THERE": 121, "NO": 121, "FOR": 121, "THE": 121, "TO": 121, "BY": 121, "IN": 121, "write": 121, "OR": 121, "AS": 121, "OF": 121, "BUT": 121, "NOT": 121, "merchant": 121, "fit": 121, "risk": 121, "qualiti": 121, "WITH": 121, "prove": 121, "defect": 121, "repair": 121, "correct": 121, "event": 121, "WILL": 121, "BE": 121, "damag": 121, "incident": 121, "consequenti": 121, "out": 121, "inabl": 121, "loss": 121, "BEING": 121, "inaccur": 121, "sustain": 121, "failur": 121, "even": 121, "IF": 121, "SUCH": 121, "advis": 121, "possibl": 121, "17": 121, "local": 121, "review": 121, "close": 121, "approxim": 121, "absolut": 121, "waiver": 121, "civil": 121, "end": 121, "greatest": 121, "best": 121, "achiev": 121, "redistribut": 121, "attach": 121, "It": 121, "safest": 121, "start": 121, "pointer": 121, "full": 121, "brief": 121, "idea": 121, "hope": 121, "www": 121, "contact": 121, "electron": 121, "paper": 121, "mail": 121, "short": 121, "w": 121, "welcom": 121, "hypothet": 121, "Of": 121, "cours": 121, "might": 121, "gui": 121, "box": 121, "employ": 121, "programm": 121, "school": 121, "sign": 121, "subroutin": 121, "lesser": 121, "instead": 121, "pleas": 121, "why": 121, "lgpl": 121, "creat": 122}, "objects": {"": [[1, 0, 0, "-", "czekitout"]], "czekitout": [[2, 0, 0, "-", "check"], [45, 0, 0, "-", "convert"], [94, 0, 0, "-", "isa"], [113, 0, 0, "-", "name"], [115, 1, 1, "", "show_config"], [116, 0, 0, "-", "version"]], "czekitout.check": [[3, 1, 1, "", "if_bool"], [4, 1, 1, "", "if_bool_array_3d"], [5, 1, 1, "", "if_bool_matrix"], [6, 1, 1, "", "if_callable"], [7, 1, 1, "", "if_dict_like"], [8, 1, 1, "", "if_float"], [9, 1, 1, "", "if_float_seq"], [10, 1, 1, "", "if_instance_of_any_accepted_types"], [11, 1, 1, "", "if_int"], [12, 1, 1, "", "if_int_seq"], [13, 1, 1, "", "if_multi_dim_slice_like"], [14, 1, 1, "", "if_nonnegative_float"], [15, 1, 1, "", "if_nonnegative_float_seq"], [16, 1, 1, "", "if_nonnegative_int"], [17, 1, 1, "", "if_nonnegative_int_seq"], [18, 1, 1, "", "if_nonnegative_numpy_array"], [19, 1, 1, "", "if_nonnegative_numpy_matrix"], [20, 1, 1, "", "if_one_of_any_accepted_strings"], [21, 1, 1, "", "if_pair_of_floats"], [22, 1, 1, "", "if_pair_of_ints"], [23, 1, 1, "", "if_pair_of_nonnegative_floats"], [24, 1, 1, "", "if_pair_of_nonnegative_ints"], [25, 1, 1, "", "if_pair_of_positive_floats"], [26, 1, 1, "", "if_pair_of_positive_ints"], [27, 1, 1, "", "if_pairs_of_floats"], [28, 1, 1, "", "if_pairs_of_ints"], [29, 1, 1, "", "if_pairs_of_nonnegative_ints"], [30, 1, 1, "", "if_path_like"], [31, 1, 1, "", "if_path_like_seq"], [32, 1, 1, "", "if_positive_float"], [33, 1, 1, "", "if_positive_float_seq"], [34, 1, 1, "", "if_positive_int"], [35, 1, 1, "", "if_positive_int_seq"], [36, 1, 1, "", "if_quadruplet_of_nonnegative_ints"], [37, 1, 1, "", "if_real_numpy_array"], [38, 1, 1, "", "if_real_numpy_array_1d"], [39, 1, 1, "", "if_real_numpy_array_3d"], [40, 1, 1, "", "if_real_numpy_matrix"], [41, 1, 1, "", "if_real_two_column_numpy_matrix"], [42, 1, 1, "", "if_single_dim_slice_like"], [43, 1, 1, "", "if_str_like"], [44, 1, 1, "", "if_str_like_seq"]], "czekitout.convert": [[46, 1, 1, "", "to_bool"], [47, 1, 1, "", "to_bool_numpy_array_3d"], [48, 1, 1, "", "to_bool_numpy_matrix"], [49, 1, 1, "", "to_dict"], [50, 1, 1, "", "to_float"], [51, 1, 1, "", "to_int"], [52, 1, 1, "", "to_list_of_floats"], [53, 1, 1, "", "to_list_of_ints"], [54, 1, 1, "", "to_list_of_nonnegative_floats"], [55, 1, 1, "", "to_list_of_nonnegative_ints"], [56, 1, 1, "", "to_list_of_path_like_objs"], [57, 1, 1, "", "to_list_of_positive_floats"], [58, 1, 1, "", "to_list_of_positive_ints"], [59, 1, 1, "", "to_list_of_strs"], [60, 1, 1, "", "to_multi_dim_slice"], [61, 1, 1, "", "to_nonnegative_float"], [62, 1, 1, "", "to_nonnegative_int"], [63, 1, 1, "", "to_nonnegative_numpy_array"], [64, 1, 1, "", "to_nonnegative_numpy_matrix"], [65, 1, 1, "", "to_numpy_array"], [66, 1, 1, "", "to_pair_of_floats"], [67, 1, 1, "", "to_pair_of_ints"], [68, 1, 1, "", "to_pair_of_nonnegative_floats"], [69, 1, 1, "", "to_pair_of_nonnegative_ints"], [70, 1, 1, "", "to_pair_of_positive_floats"], [71, 1, 1, "", "to_pair_of_positive_ints"], [72, 1, 1, "", "to_pairs_of_floats"], [73, 1, 1, "", "to_pairs_of_ints"], [74, 1, 1, "", "to_pairs_of_nonnegative_ints"], [75, 1, 1, "", "to_positive_float"], [76, 1, 1, "", "to_positive_int"], [77, 1, 1, "", "to_quadruplet_of_nonnegative_ints"], [78, 1, 1, "", "to_real_numpy_array"], [79, 1, 1, "", "to_real_numpy_array_1d"], [80, 1, 1, "", "to_real_numpy_array_3d"], [81, 1, 1, "", "to_real_numpy_matrix"], [82, 1, 1, "", "to_real_two_column_numpy_matrix"], [83, 1, 1, "", "to_single_dim_slice"], [84, 1, 1, "", "to_str_from_path_like"], [85, 1, 1, "", "to_str_from_str_like"], [86, 1, 1, "", "to_tuple_of_floats"], [87, 1, 1, "", "to_tuple_of_ints"], [88, 1, 1, "", "to_tuple_of_nonnegative_floats"], [89, 1, 1, "", "to_tuple_of_nonnegative_ints"], [90, 1, 1, "", "to_tuple_of_path_like_objs"], [91, 1, 1, "", "to_tuple_of_positive_floats"], [92, 1, 1, "", "to_tuple_of_positive_ints"], [93, 1, 1, "", "to_tuple_of_strs"]], "czekitout.isa": [[95, 1, 1, "", "bool_numpy_array"], [96, 1, 1, "", "bool_numpy_array_3d"], [97, 1, 1, "", "bool_numpy_matrix"], [98, 1, 1, "", "complex_numpy_array"], [99, 1, 1, "", "complex_numpy_matrix"], [100, 1, 1, "", "nonnegative_numpy_array"], [101, 1, 1, "", "nonnegative_numpy_matrix"], [102, 1, 1, "", "numpy_array"], [103, 1, 1, "", "numpy_array_1d"], [104, 1, 1, "", "numpy_array_3d"], [105, 1, 1, "", "numpy_matrix"], [106, 1, 1, "", "real_numpy_array"], [107, 1, 1, "", "real_numpy_array_1d"], [108, 1, 1, "", "real_numpy_array_3d"], [109, 1, 1, "", "real_numpy_matrix"], [110, 1, 1, "", "real_two_column_numpy_matrix"], [111, 1, 1, "", "scalar_numpy_array"], [112, 1, 1, "", "two_column_numpy_matrix"]], "czekitout.name": [[114, 1, 1, "", "fully_qualified_class_name"]]}, "objtypes": {"0": "py:module", "1": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"]}, "titleterms": {"instal": 0, "instruct": 0, "czekitout": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120], "updat": 0, "uninstal": 0, "gener": 0, "document": 0, "file": 0, "check": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], "if_bool": 3, "if_bool_array_3d": 4, "if_bool_matrix": 5, "if_cal": 6, "if_dict_lik": 7, "if_float": 8, "if_float_seq": 9, "if_instance_of_any_accepted_typ": 10, "if_int": 11, "if_int_seq": 12, "if_multi_dim_slice_lik": 13, "if_nonnegative_float": 14, "if_nonnegative_float_seq": 15, "if_nonnegative_int": 16, "if_nonnegative_int_seq": 17, "if_nonnegative_numpy_arrai": 18, "if_nonnegative_numpy_matrix": 19, "if_one_of_any_accepted_str": 20, "if_pair_of_float": 21, "if_pair_of_int": 22, "if_pair_of_nonnegative_float": 23, "if_pair_of_nonnegative_int": 24, "if_pair_of_positive_float": 25, "if_pair_of_positive_int": 26, "if_pairs_of_float": 27, "if_pairs_of_int": 28, "if_pairs_of_nonnegative_int": 29, "if_path_lik": 30, "if_path_like_seq": 31, "if_positive_float": 32, "if_positive_float_seq": 33, "if_positive_int": 34, "if_positive_int_seq": 35, "if_quadruplet_of_nonnegative_int": 36, "if_real_numpy_arrai": 37, "if_real_numpy_array_1d": 38, "if_real_numpy_array_3d": 39, "if_real_numpy_matrix": 40, "if_real_two_column_numpy_matrix": 41, "if_single_dim_slice_lik": 42, "if_str_lik": 43, "if_str_like_seq": 44, "convert": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "to_bool": 46, "to_bool_numpy_array_3d": 47, "to_bool_numpy_matrix": 48, "to_dict": 49, "to_float": 50, "to_int": 51, "to_list_of_float": 52, "to_list_of_int": 53, "to_list_of_nonnegative_float": 54, "to_list_of_nonnegative_int": 55, "to_list_of_path_like_obj": 56, "to_list_of_positive_float": 57, "to_list_of_positive_int": 58, "to_list_of_str": 59, "to_multi_dim_slic": 60, "to_nonnegative_float": 61, "to_nonnegative_int": 62, "to_nonnegative_numpy_arrai": 63, "to_nonnegative_numpy_matrix": 64, "to_numpy_arrai": 65, "to_pair_of_float": 66, "to_pair_of_int": 67, "to_pair_of_nonnegative_float": 68, "to_pair_of_nonnegative_int": 69, "to_pair_of_positive_float": 70, "to_pair_of_positive_int": 71, "to_pairs_of_float": 72, "to_pairs_of_int": 73, "to_pairs_of_nonnegative_int": 74, "to_positive_float": 75, "to_positive_int": 76, "to_quadruplet_of_nonnegative_int": 77, "to_real_numpy_arrai": 78, "to_real_numpy_array_1d": 79, "to_real_numpy_array_3d": 80, "to_real_numpy_matrix": 81, "to_real_two_column_numpy_matrix": 82, "to_single_dim_slic": 83, "to_str_from_path_lik": 84, "to_str_from_str_lik": 85, "to_tuple_of_float": 86, "to_tuple_of_int": 87, "to_tuple_of_nonnegative_float": 88, "to_tuple_of_nonnegative_int": 89, "to_tuple_of_path_like_obj": 90, "to_tuple_of_positive_float": 91, "to_tuple_of_positive_int": 92, "to_tuple_of_str": 93, "isa": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "bool_numpy_arrai": 95, "bool_numpy_array_3d": 96, "bool_numpy_matrix": 97, "complex_numpy_arrai": 98, "complex_numpy_matrix": 99, "nonnegative_numpy_arrai": 100, "nonnegative_numpy_matrix": 101, "numpy_arrai": 102, "numpy_array_1d": 103, "numpy_array_3d": 104, "numpy_matrix": 105, "real_numpy_arrai": 106, "real_numpy_array_1d": 107, "real_numpy_array_3d": 108, "real_numpy_matrix": 109, "real_two_column_numpy_matrix": 110, "scalar_numpy_arrai": 111, "two_column_numpy_matrix": 112, "name": [113, 114], "fully_qualified_class_nam": 114, "show_config": 115, "version": 116, "refer": 117, "guid": 117, "changelog": 118, "exampl": 119, "set": 120, "up": 120, "learn": 120, "how": 120, "us": 120, "content": 120, "indic": 120, "tabl": 120, "licens": 121, "To": 122, "do": 122, "list": 122}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Installation instructions": [[0, "installation-instructions"]], "Install czekitout": [[0, "install-czekitout"]], "Update czekitout": [[0, "update-czekitout"]], "Uninstall czekitout": [[0, "uninstall-czekitout"]], "Generating documention files": [[0, "generating-documention-files"]], "czekitout": [[1, "module-czekitout"], [120, "czekitout"]], "czekitout.check": [[2, "module-czekitout.check"]], "czekitout.check.if_bool": [[3, "czekitout-check-if-bool"]], "czekitout.check.if_bool_array_3d": [[4, "czekitout-check-if-bool-array-3d"]], "czekitout.check.if_bool_matrix": [[5, "czekitout-check-if-bool-matrix"]], "czekitout.check.if_callable": [[6, "czekitout-check-if-callable"]], "czekitout.check.if_dict_like": [[7, "czekitout-check-if-dict-like"]], "czekitout.check.if_float": [[8, "czekitout-check-if-float"]], "czekitout.check.if_float_seq": [[9, "czekitout-check-if-float-seq"]], "czekitout.check.if_instance_of_any_accepted_types": [[10, "czekitout-check-if-instance-of-any-accepted-types"]], "czekitout.check.if_int": [[11, "czekitout-check-if-int"]], "czekitout.check.if_int_seq": [[12, "czekitout-check-if-int-seq"]], "czekitout.check.if_multi_dim_slice_like": [[13, "czekitout-check-if-multi-dim-slice-like"]], "czekitout.check.if_nonnegative_float": [[14, "czekitout-check-if-nonnegative-float"]], "czekitout.check.if_nonnegative_float_seq": [[15, "czekitout-check-if-nonnegative-float-seq"]], "czekitout.check.if_nonnegative_int": [[16, "czekitout-check-if-nonnegative-int"]], "czekitout.check.if_nonnegative_int_seq": [[17, "czekitout-check-if-nonnegative-int-seq"]], "czekitout.check.if_nonnegative_numpy_array": [[18, "czekitout-check-if-nonnegative-numpy-array"]], "czekitout.check.if_nonnegative_numpy_matrix": [[19, "czekitout-check-if-nonnegative-numpy-matrix"]], "czekitout.check.if_one_of_any_accepted_strings": [[20, "czekitout-check-if-one-of-any-accepted-strings"]], "czekitout.check.if_pair_of_floats": [[21, "czekitout-check-if-pair-of-floats"]], "czekitout.check.if_pair_of_ints": [[22, "czekitout-check-if-pair-of-ints"]], "czekitout.check.if_pair_of_nonnegative_floats": [[23, "czekitout-check-if-pair-of-nonnegative-floats"]], "czekitout.check.if_pair_of_nonnegative_ints": [[24, "czekitout-check-if-pair-of-nonnegative-ints"]], "czekitout.check.if_pair_of_positive_floats": [[25, "czekitout-check-if-pair-of-positive-floats"]], "czekitout.check.if_pair_of_positive_ints": [[26, "czekitout-check-if-pair-of-positive-ints"]], "czekitout.check.if_pairs_of_floats": [[27, "czekitout-check-if-pairs-of-floats"]], "czekitout.check.if_pairs_of_ints": [[28, "czekitout-check-if-pairs-of-ints"]], "czekitout.check.if_pairs_of_nonnegative_ints": [[29, "czekitout-check-if-pairs-of-nonnegative-ints"]], "czekitout.check.if_path_like": [[30, "czekitout-check-if-path-like"]], "czekitout.check.if_path_like_seq": [[31, "czekitout-check-if-path-like-seq"]], "czekitout.check.if_positive_float": [[32, "czekitout-check-if-positive-float"]], "czekitout.check.if_positive_float_seq": [[33, "czekitout-check-if-positive-float-seq"]], "czekitout.check.if_positive_int": [[34, "czekitout-check-if-positive-int"]], "czekitout.check.if_positive_int_seq": [[35, "czekitout-check-if-positive-int-seq"]], "czekitout.check.if_quadruplet_of_nonnegative_ints": [[36, "czekitout-check-if-quadruplet-of-nonnegative-ints"]], "czekitout.check.if_real_numpy_array": [[37, "czekitout-check-if-real-numpy-array"]], "czekitout.check.if_real_numpy_array_1d": [[38, "czekitout-check-if-real-numpy-array-1d"]], "czekitout.check.if_real_numpy_array_3d": [[39, "czekitout-check-if-real-numpy-array-3d"]], "czekitout.check.if_real_numpy_matrix": [[40, "czekitout-check-if-real-numpy-matrix"]], "czekitout.check.if_real_two_column_numpy_matrix": [[41, "czekitout-check-if-real-two-column-numpy-matrix"]], "czekitout.check.if_single_dim_slice_like": [[42, "czekitout-check-if-single-dim-slice-like"]], "czekitout.check.if_str_like": [[43, "czekitout-check-if-str-like"]], "czekitout.check.if_str_like_seq": [[44, "czekitout-check-if-str-like-seq"]], "czekitout.convert": [[45, "module-czekitout.convert"]], "czekitout.convert.to_bool": [[46, "czekitout-convert-to-bool"]], "czekitout.convert.to_bool_numpy_array_3d": [[47, "czekitout-convert-to-bool-numpy-array-3d"]], "czekitout.convert.to_bool_numpy_matrix": [[48, "czekitout-convert-to-bool-numpy-matrix"]], "czekitout.convert.to_dict": [[49, "czekitout-convert-to-dict"]], "czekitout.convert.to_float": [[50, "czekitout-convert-to-float"]], "czekitout.convert.to_int": [[51, "czekitout-convert-to-int"]], "czekitout.convert.to_list_of_floats": [[52, "czekitout-convert-to-list-of-floats"]], "czekitout.convert.to_list_of_ints": [[53, "czekitout-convert-to-list-of-ints"]], "czekitout.convert.to_list_of_nonnegative_floats": [[54, "czekitout-convert-to-list-of-nonnegative-floats"]], "czekitout.convert.to_list_of_nonnegative_ints": [[55, "czekitout-convert-to-list-of-nonnegative-ints"]], "czekitout.convert.to_list_of_path_like_objs": [[56, "czekitout-convert-to-list-of-path-like-objs"]], "czekitout.convert.to_list_of_positive_floats": [[57, "czekitout-convert-to-list-of-positive-floats"]], "czekitout.convert.to_list_of_positive_ints": [[58, "czekitout-convert-to-list-of-positive-ints"]], "czekitout.convert.to_list_of_strs": [[59, "czekitout-convert-to-list-of-strs"]], "czekitout.convert.to_multi_dim_slice": [[60, "czekitout-convert-to-multi-dim-slice"]], "czekitout.convert.to_nonnegative_float": [[61, "czekitout-convert-to-nonnegative-float"]], "czekitout.convert.to_nonnegative_int": [[62, "czekitout-convert-to-nonnegative-int"]], "czekitout.convert.to_nonnegative_numpy_array": [[63, "czekitout-convert-to-nonnegative-numpy-array"]], "czekitout.convert.to_nonnegative_numpy_matrix": [[64, "czekitout-convert-to-nonnegative-numpy-matrix"]], "czekitout.convert.to_numpy_array": [[65, "czekitout-convert-to-numpy-array"]], "czekitout.convert.to_pair_of_floats": [[66, "czekitout-convert-to-pair-of-floats"]], "czekitout.convert.to_pair_of_ints": [[67, "czekitout-convert-to-pair-of-ints"]], "czekitout.convert.to_pair_of_nonnegative_floats": [[68, "czekitout-convert-to-pair-of-nonnegative-floats"]], "czekitout.convert.to_pair_of_nonnegative_ints": [[69, "czekitout-convert-to-pair-of-nonnegative-ints"]], "czekitout.convert.to_pair_of_positive_floats": [[70, "czekitout-convert-to-pair-of-positive-floats"]], "czekitout.convert.to_pair_of_positive_ints": [[71, "czekitout-convert-to-pair-of-positive-ints"]], "czekitout.convert.to_pairs_of_floats": [[72, "czekitout-convert-to-pairs-of-floats"]], "czekitout.convert.to_pairs_of_ints": [[73, "czekitout-convert-to-pairs-of-ints"]], "czekitout.convert.to_pairs_of_nonnegative_ints": [[74, "czekitout-convert-to-pairs-of-nonnegative-ints"]], "czekitout.convert.to_positive_float": [[75, "czekitout-convert-to-positive-float"]], "czekitout.convert.to_positive_int": [[76, "czekitout-convert-to-positive-int"]], "czekitout.convert.to_quadruplet_of_nonnegative_ints": [[77, "czekitout-convert-to-quadruplet-of-nonnegative-ints"]], "czekitout.convert.to_real_numpy_array": [[78, "czekitout-convert-to-real-numpy-array"]], "czekitout.convert.to_real_numpy_array_1d": [[79, "czekitout-convert-to-real-numpy-array-1d"]], "czekitout.convert.to_real_numpy_array_3d": [[80, "czekitout-convert-to-real-numpy-array-3d"]], "czekitout.convert.to_real_numpy_matrix": [[81, "czekitout-convert-to-real-numpy-matrix"]], "czekitout.convert.to_real_two_column_numpy_matrix": [[82, "czekitout-convert-to-real-two-column-numpy-matrix"]], "czekitout.convert.to_single_dim_slice": [[83, "czekitout-convert-to-single-dim-slice"]], "czekitout.convert.to_str_from_path_like": [[84, "czekitout-convert-to-str-from-path-like"]], "czekitout.convert.to_str_from_str_like": [[85, "czekitout-convert-to-str-from-str-like"]], "czekitout.convert.to_tuple_of_floats": [[86, "czekitout-convert-to-tuple-of-floats"]], "czekitout.convert.to_tuple_of_ints": [[87, "czekitout-convert-to-tuple-of-ints"]], "czekitout.convert.to_tuple_of_nonnegative_floats": [[88, "czekitout-convert-to-tuple-of-nonnegative-floats"]], "czekitout.convert.to_tuple_of_nonnegative_ints": [[89, "czekitout-convert-to-tuple-of-nonnegative-ints"]], "czekitout.convert.to_tuple_of_path_like_objs": [[90, "czekitout-convert-to-tuple-of-path-like-objs"]], "czekitout.convert.to_tuple_of_positive_floats": [[91, "czekitout-convert-to-tuple-of-positive-floats"]], "czekitout.convert.to_tuple_of_positive_ints": [[92, "czekitout-convert-to-tuple-of-positive-ints"]], "czekitout.convert.to_tuple_of_strs": [[93, "czekitout-convert-to-tuple-of-strs"]], "czekitout.isa": [[94, "module-czekitout.isa"]], "czekitout.isa.bool_numpy_array": [[95, "czekitout-isa-bool-numpy-array"]], "czekitout.isa.bool_numpy_array_3d": [[96, "czekitout-isa-bool-numpy-array-3d"]], "czekitout.isa.bool_numpy_matrix": [[97, "czekitout-isa-bool-numpy-matrix"]], "czekitout.isa.complex_numpy_array": [[98, "czekitout-isa-complex-numpy-array"]], "czekitout.isa.complex_numpy_matrix": [[99, "czekitout-isa-complex-numpy-matrix"]], "czekitout.isa.nonnegative_numpy_array": [[100, "czekitout-isa-nonnegative-numpy-array"]], "czekitout.isa.nonnegative_numpy_matrix": [[101, "czekitout-isa-nonnegative-numpy-matrix"]], "czekitout.isa.numpy_array": [[102, "czekitout-isa-numpy-array"]], "czekitout.isa.numpy_array_1d": [[103, "czekitout-isa-numpy-array-1d"]], "czekitout.isa.numpy_array_3d": [[104, "czekitout-isa-numpy-array-3d"]], "czekitout.isa.numpy_matrix": [[105, "czekitout-isa-numpy-matrix"]], "czekitout.isa.real_numpy_array": [[106, "czekitout-isa-real-numpy-array"]], "czekitout.isa.real_numpy_array_1d": [[107, "czekitout-isa-real-numpy-array-1d"]], "czekitout.isa.real_numpy_array_3d": [[108, "czekitout-isa-real-numpy-array-3d"]], "czekitout.isa.real_numpy_matrix": [[109, "czekitout-isa-real-numpy-matrix"]], "czekitout.isa.real_two_column_numpy_matrix": [[110, "czekitout-isa-real-two-column-numpy-matrix"]], "czekitout.isa.scalar_numpy_array": [[111, "czekitout-isa-scalar-numpy-array"]], "czekitout.isa.two_column_numpy_matrix": [[112, "czekitout-isa-two-column-numpy-matrix"]], "czekitout.name": [[113, "module-czekitout.name"]], "czekitout.name.fully_qualified_class_name": [[114, "czekitout-name-fully-qualified-class-name"]], "czekitout.show_config": [[115, "czekitout-show-config"]], "czekitout.version": [[116, "module-czekitout.version"]], "czekitout reference guide": [[117, "czekitout-reference-guide"]], "CHANGELOG": [[118, "changelog"]], "Examples": [[119, "examples"]], "Setting up czekitout": [[120, "setting-up-czekitout"]], "Learning how to use czekitout": [[120, "learning-how-to-use-czekitout"]], "Contents": [[120, "contents"]], "Indices and tables": [[120, "indices-and-tables"]], "License": [[121, "license"]], "To-Do list": [[122, "to-do-list"]]}, "indexentries": {"czekitout": [[1, "module-czekitout"]], "module": [[1, "module-czekitout"], [2, "module-czekitout.check"], [45, "module-czekitout.convert"], [94, "module-czekitout.isa"], [113, "module-czekitout.name"], [116, "module-czekitout.version"]], "czekitout.check": [[2, "module-czekitout.check"]], "if_bool() (in module czekitout.check)": [[3, "czekitout.check.if_bool"]], "if_bool_array_3d() (in module czekitout.check)": [[4, "czekitout.check.if_bool_array_3d"]], "if_bool_matrix() (in module czekitout.check)": [[5, "czekitout.check.if_bool_matrix"]], "if_callable() (in module czekitout.check)": [[6, "czekitout.check.if_callable"]], "if_dict_like() (in module czekitout.check)": [[7, "czekitout.check.if_dict_like"]], "if_float() (in module czekitout.check)": [[8, "czekitout.check.if_float"]], "if_float_seq() (in module czekitout.check)": [[9, "czekitout.check.if_float_seq"]], "if_instance_of_any_accepted_types() (in module czekitout.check)": [[10, "czekitout.check.if_instance_of_any_accepted_types"]], "if_int() (in module czekitout.check)": [[11, "czekitout.check.if_int"]], "if_int_seq() (in module czekitout.check)": [[12, "czekitout.check.if_int_seq"]], "if_multi_dim_slice_like() (in module czekitout.check)": [[13, "czekitout.check.if_multi_dim_slice_like"]], "if_nonnegative_float() (in module czekitout.check)": [[14, "czekitout.check.if_nonnegative_float"]], "if_nonnegative_float_seq() (in module czekitout.check)": [[15, "czekitout.check.if_nonnegative_float_seq"]], "if_nonnegative_int() (in module czekitout.check)": [[16, "czekitout.check.if_nonnegative_int"]], "if_nonnegative_int_seq() (in module czekitout.check)": [[17, "czekitout.check.if_nonnegative_int_seq"]], "if_nonnegative_numpy_array() (in module czekitout.check)": [[18, "czekitout.check.if_nonnegative_numpy_array"]], "if_nonnegative_numpy_matrix() (in module czekitout.check)": [[19, "czekitout.check.if_nonnegative_numpy_matrix"]], "if_one_of_any_accepted_strings() (in module czekitout.check)": [[20, "czekitout.check.if_one_of_any_accepted_strings"]], "if_pair_of_floats() (in module czekitout.check)": [[21, "czekitout.check.if_pair_of_floats"]], "if_pair_of_ints() (in module czekitout.check)": [[22, "czekitout.check.if_pair_of_ints"]], "if_pair_of_nonnegative_floats() (in module czekitout.check)": [[23, "czekitout.check.if_pair_of_nonnegative_floats"]], "if_pair_of_nonnegative_ints() (in module czekitout.check)": [[24, "czekitout.check.if_pair_of_nonnegative_ints"]], "if_pair_of_positive_floats() (in module czekitout.check)": [[25, "czekitout.check.if_pair_of_positive_floats"]], "if_pair_of_positive_ints() (in module czekitout.check)": [[26, "czekitout.check.if_pair_of_positive_ints"]], "if_pairs_of_floats() (in module czekitout.check)": [[27, "czekitout.check.if_pairs_of_floats"]], "if_pairs_of_ints() (in module czekitout.check)": [[28, "czekitout.check.if_pairs_of_ints"]], "if_pairs_of_nonnegative_ints() (in module czekitout.check)": [[29, "czekitout.check.if_pairs_of_nonnegative_ints"]], "if_path_like() (in module czekitout.check)": [[30, "czekitout.check.if_path_like"]], "if_path_like_seq() (in module czekitout.check)": [[31, "czekitout.check.if_path_like_seq"]], "if_positive_float() (in module czekitout.check)": [[32, "czekitout.check.if_positive_float"]], "if_positive_float_seq() (in module czekitout.check)": [[33, "czekitout.check.if_positive_float_seq"]], "if_positive_int() (in module czekitout.check)": [[34, "czekitout.check.if_positive_int"]], "if_positive_int_seq() (in module czekitout.check)": [[35, "czekitout.check.if_positive_int_seq"]], "if_quadruplet_of_nonnegative_ints() (in module czekitout.check)": [[36, "czekitout.check.if_quadruplet_of_nonnegative_ints"]], "if_real_numpy_array() (in module czekitout.check)": [[37, "czekitout.check.if_real_numpy_array"]], "if_real_numpy_array_1d() (in module czekitout.check)": [[38, "czekitout.check.if_real_numpy_array_1d"]], "if_real_numpy_array_3d() (in module czekitout.check)": [[39, "czekitout.check.if_real_numpy_array_3d"]], "if_real_numpy_matrix() (in module czekitout.check)": [[40, "czekitout.check.if_real_numpy_matrix"]], "if_real_two_column_numpy_matrix() (in module czekitout.check)": [[41, "czekitout.check.if_real_two_column_numpy_matrix"]], "if_single_dim_slice_like() (in module czekitout.check)": [[42, "czekitout.check.if_single_dim_slice_like"]], "if_str_like() (in module czekitout.check)": [[43, "czekitout.check.if_str_like"]], "if_str_like_seq() (in module czekitout.check)": [[44, "czekitout.check.if_str_like_seq"]], "czekitout.convert": [[45, "module-czekitout.convert"]], "to_bool() (in module czekitout.convert)": [[46, "czekitout.convert.to_bool"]], "to_bool_numpy_array_3d() (in module czekitout.convert)": [[47, "czekitout.convert.to_bool_numpy_array_3d"]], "to_bool_numpy_matrix() (in module czekitout.convert)": [[48, "czekitout.convert.to_bool_numpy_matrix"]], "to_dict() (in module czekitout.convert)": [[49, "czekitout.convert.to_dict"]], "to_float() (in module czekitout.convert)": [[50, "czekitout.convert.to_float"]], "to_int() (in module czekitout.convert)": [[51, "czekitout.convert.to_int"]], "to_list_of_floats() (in module czekitout.convert)": [[52, "czekitout.convert.to_list_of_floats"]], "to_list_of_ints() (in module czekitout.convert)": [[53, "czekitout.convert.to_list_of_ints"]], "to_list_of_nonnegative_floats() (in module czekitout.convert)": [[54, "czekitout.convert.to_list_of_nonnegative_floats"]], "to_list_of_nonnegative_ints() (in module czekitout.convert)": [[55, "czekitout.convert.to_list_of_nonnegative_ints"]], "to_list_of_path_like_objs() (in module czekitout.convert)": [[56, "czekitout.convert.to_list_of_path_like_objs"]], "to_list_of_positive_floats() (in module czekitout.convert)": [[57, "czekitout.convert.to_list_of_positive_floats"]], "to_list_of_positive_ints() (in module czekitout.convert)": [[58, "czekitout.convert.to_list_of_positive_ints"]], "to_list_of_strs() (in module czekitout.convert)": [[59, "czekitout.convert.to_list_of_strs"]], "to_multi_dim_slice() (in module czekitout.convert)": [[60, "czekitout.convert.to_multi_dim_slice"]], "to_nonnegative_float() (in module czekitout.convert)": [[61, "czekitout.convert.to_nonnegative_float"]], "to_nonnegative_int() (in module czekitout.convert)": [[62, "czekitout.convert.to_nonnegative_int"]], "to_nonnegative_numpy_array() (in module czekitout.convert)": [[63, "czekitout.convert.to_nonnegative_numpy_array"]], "to_nonnegative_numpy_matrix() (in module czekitout.convert)": [[64, "czekitout.convert.to_nonnegative_numpy_matrix"]], "to_numpy_array() (in module czekitout.convert)": [[65, "czekitout.convert.to_numpy_array"]], "to_pair_of_floats() (in module czekitout.convert)": [[66, "czekitout.convert.to_pair_of_floats"]], "to_pair_of_ints() (in module czekitout.convert)": [[67, "czekitout.convert.to_pair_of_ints"]], "to_pair_of_nonnegative_floats() (in module czekitout.convert)": [[68, "czekitout.convert.to_pair_of_nonnegative_floats"]], "to_pair_of_nonnegative_ints() (in module czekitout.convert)": [[69, "czekitout.convert.to_pair_of_nonnegative_ints"]], "to_pair_of_positive_floats() (in module czekitout.convert)": [[70, "czekitout.convert.to_pair_of_positive_floats"]], "to_pair_of_positive_ints() (in module czekitout.convert)": [[71, "czekitout.convert.to_pair_of_positive_ints"]], "to_pairs_of_floats() (in module czekitout.convert)": [[72, "czekitout.convert.to_pairs_of_floats"]], "to_pairs_of_ints() (in module czekitout.convert)": [[73, "czekitout.convert.to_pairs_of_ints"]], "to_pairs_of_nonnegative_ints() (in module czekitout.convert)": [[74, "czekitout.convert.to_pairs_of_nonnegative_ints"]], "to_positive_float() (in module czekitout.convert)": [[75, "czekitout.convert.to_positive_float"]], "to_positive_int() (in module czekitout.convert)": [[76, "czekitout.convert.to_positive_int"]], "to_quadruplet_of_nonnegative_ints() (in module czekitout.convert)": [[77, "czekitout.convert.to_quadruplet_of_nonnegative_ints"]], "to_real_numpy_array() (in module czekitout.convert)": [[78, "czekitout.convert.to_real_numpy_array"]], "to_real_numpy_array_1d() (in module czekitout.convert)": [[79, "czekitout.convert.to_real_numpy_array_1d"]], "to_real_numpy_array_3d() (in module czekitout.convert)": [[80, "czekitout.convert.to_real_numpy_array_3d"]], "to_real_numpy_matrix() (in module czekitout.convert)": [[81, "czekitout.convert.to_real_numpy_matrix"]], "to_real_two_column_numpy_matrix() (in module czekitout.convert)": [[82, "czekitout.convert.to_real_two_column_numpy_matrix"]], "to_single_dim_slice() (in module czekitout.convert)": [[83, "czekitout.convert.to_single_dim_slice"]], "to_str_from_path_like() (in module czekitout.convert)": [[84, "czekitout.convert.to_str_from_path_like"]], "to_str_from_str_like() (in module czekitout.convert)": [[85, "czekitout.convert.to_str_from_str_like"]], "to_tuple_of_floats() (in module czekitout.convert)": [[86, "czekitout.convert.to_tuple_of_floats"]], "to_tuple_of_ints() (in module czekitout.convert)": [[87, "czekitout.convert.to_tuple_of_ints"]], "to_tuple_of_nonnegative_floats() (in module czekitout.convert)": [[88, "czekitout.convert.to_tuple_of_nonnegative_floats"]], "to_tuple_of_nonnegative_ints() (in module czekitout.convert)": [[89, "czekitout.convert.to_tuple_of_nonnegative_ints"]], "to_tuple_of_path_like_objs() (in module czekitout.convert)": [[90, "czekitout.convert.to_tuple_of_path_like_objs"]], "to_tuple_of_positive_floats() (in module czekitout.convert)": [[91, "czekitout.convert.to_tuple_of_positive_floats"]], "to_tuple_of_positive_ints() (in module czekitout.convert)": [[92, "czekitout.convert.to_tuple_of_positive_ints"]], "to_tuple_of_strs() (in module czekitout.convert)": [[93, "czekitout.convert.to_tuple_of_strs"]], "czekitout.isa": [[94, "module-czekitout.isa"]], "bool_numpy_array() (in module czekitout.isa)": [[95, "czekitout.isa.bool_numpy_array"]], "bool_numpy_array_3d() (in module czekitout.isa)": [[96, "czekitout.isa.bool_numpy_array_3d"]], "bool_numpy_matrix() (in module czekitout.isa)": [[97, "czekitout.isa.bool_numpy_matrix"]], "complex_numpy_array() (in module czekitout.isa)": [[98, "czekitout.isa.complex_numpy_array"]], "complex_numpy_matrix() (in module czekitout.isa)": [[99, "czekitout.isa.complex_numpy_matrix"]], "nonnegative_numpy_array() (in module czekitout.isa)": [[100, "czekitout.isa.nonnegative_numpy_array"]], "nonnegative_numpy_matrix() (in module czekitout.isa)": [[101, "czekitout.isa.nonnegative_numpy_matrix"]], "numpy_array() (in module czekitout.isa)": [[102, "czekitout.isa.numpy_array"]], "numpy_array_1d() (in module czekitout.isa)": [[103, "czekitout.isa.numpy_array_1d"]], "numpy_array_3d() (in module czekitout.isa)": [[104, "czekitout.isa.numpy_array_3d"]], "numpy_matrix() (in module czekitout.isa)": [[105, "czekitout.isa.numpy_matrix"]], "real_numpy_array() (in module czekitout.isa)": [[106, "czekitout.isa.real_numpy_array"]], "real_numpy_array_1d() (in module czekitout.isa)": [[107, "czekitout.isa.real_numpy_array_1d"]], "real_numpy_array_3d() (in module czekitout.isa)": [[108, "czekitout.isa.real_numpy_array_3d"]], "real_numpy_matrix() (in module czekitout.isa)": [[109, "czekitout.isa.real_numpy_matrix"]], "real_two_column_numpy_matrix() (in module czekitout.isa)": [[110, "czekitout.isa.real_two_column_numpy_matrix"]], "scalar_numpy_array() (in module czekitout.isa)": [[111, "czekitout.isa.scalar_numpy_array"]], "two_column_numpy_matrix() (in module czekitout.isa)": [[112, "czekitout.isa.two_column_numpy_matrix"]], "czekitout.name": [[113, "module-czekitout.name"]], "fully_qualified_class_name() (in module czekitout.name)": [[114, "czekitout.name.fully_qualified_class_name"]], "show_config() (in module czekitout)": [[115, "czekitout.show_config"]], "czekitout.version": [[116, "module-czekitout.version"]]}})